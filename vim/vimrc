" High level fixes
set noerrorbells
set nocompatible
set noswapfile
set hidden
filetype plugin indent on
syntax on
syntax enable


" Special binds
set pastetoggle=<F2>
onoremap - `
onoremap ` -

" Vim splits
set splitbelow
set splitright
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>


" formatting
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set modelines=0
set backspace=indent,eol,start
set autoindent

" cmd and mode
set noshowcmd
set noshowmode
set shortmess+=F

" numbers and lines
set number relativenumber
set ruler
set wrap!

"read and writing
set encoding=utf-8
set autowrite
set autoread
set ttyfast

" searching
set hlsearch
set incsearch
set ignorecase
set smartcase




" Vim airline disabled for now
let g:airline_symbols = {}

let g:loaded_airline = 0
let g:airline#extensions#tabline#formatter = 'default'
let g:airline_theme='violet'
let g:airline_powerline_fonts=0
let g:airline_symbols.linenr = ''
let g:airline_symbols.linenr = ''
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.branch = ''
let g:airline_extensions = ['branch']
let g:airline#extensions#ale#enabled = 1


" Color sceme
let g:material_terminal_italics = 1
let g:material_theme_style = 'default'
colorscheme material
"This breaks in urxvt!!
if (has('termguicolors'))
  set termguicolors
endif

" IDE like features for ALE
let g:ale_sign_column_always = 1
let g:ale_sign_error = 'X'
let g:ale_sign_warning = '-'
let g:ale_set_highlights = 0
if v:version >= 800
  let g:ale_fix_on_save = 1
  let g:ale_lint_on_enter = 1
  let g:ale_completion_enabled = 1
  let g:ale_echo_msg_format = '[%linter%] %s'
  let g:ale_fixers = {'*': ['remove_trailing_lines', 'trim_whitespace']}
  nnoremap <silent> K :ALEHover<CR>
  nnoremap <silent> gd :ALEGoToDefinition<CR>
  if v:version >= 801
    set balloonevalterm
    let g:ale_set_balloons = 1
  endif
endif
highlight ALEErrorSign ctermbg=NONE ctermfg=red
highlight ALEWarningSign ctermbg=NONE ctermfg=yellow guibg=NONE



"ctrl p
"let g:ctrlp_map='<leader>t'

"nerdtree
map <Leader>t :NERDTreeToggle<CR>
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeWinSize = 25

" Vimux settings
let g:VimuxOrientation = "v"
let g:VimuxHeight = "20"
map <Leader>vb :VimuxRunCommand("clear;rspec " . buffname("%"))<CR>
map <Leader>vc :VimuxPromptCommand<CR>
map <Leader>\ :VimuxRunLastCommand<CR>
map <Leader>vx :VimuxCloseRunner<CR>
